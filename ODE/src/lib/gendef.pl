# Usage:  perl gendef.pl  filename1 filename2
#         filename1: output from running dumpbin on static library.
#         filename2: Def file that gets generated by this script.

$KEY    = 'public symbol';
$KEYCOUNT = 0;
$ENDKEY = 'Archive me';
$INRANGE = 'No';

open( INPUT_FILE,  "< $ARGV[0]" );
open( OUTPUT_FILE, "> $ARGV[1]" );

# Put first 2 static lines in the def file.
print OUTPUT_FILE  "LIBRARY \n";
print OUTPUT_FILE  "EXPORTS \n";

# Loop thru entire input file generated by dumpbin...one line at a time.
while (!eof( INPUT_FILE ))
{
  # Pre-truncate each line by eliminating the first 9 columns(chars).
  $line1=readline( *INPUT_FILE );
  $len = length($line1);
  $line2=substr($line1,9,$len-9);

  if ( $INRANGE eq 'Yes' )
  {
    # Stop Processing if we spot the ENDKEY
    if ( substr($line1, 0, 10) eq $ENDKEY )
    {
      $INRANGE = 'No';
    }
    else
    {
      # Put good lines as is into def file.
      # Dont allow lines that start with "??_E" or "??_G".
      # This eliminates some Link warnings.
      if ( (substr($line2, 0, 3) eq " __") ||
           ( (substr($line2, 0, 2) eq " ?") && (substr($line2, 0, 5) ne " ??_E")
              && (substr($line2, 0, 5) ne " ??_G") ) )
      {
        print OUTPUT_FILE $line2;
      }
      else
      {
        # We need to eliminate the preceeding "_" for the extern "C" functions.
        if ( (substr($line2, 0, 2) eq " _") )
        {
          print OUTPUT_FILE  " ".substr($line2, 2, $len-11);
        }
      }
    }
  }

  # The 2nd time we spot the KEY, we are then InRange.  Meaning
  # We want the next group of lines until we find the ENDKEY.

  if ( substr($line2, 0, 13) eq $KEY )
  {
    $KEYCOUNT++;
    if ( $KEYCOUNT eq 2 )
    {
      $INRANGE = 'Yes';
    }
  }

}

close( INPUT_FILE );
close( OUTPUT_FILE );
